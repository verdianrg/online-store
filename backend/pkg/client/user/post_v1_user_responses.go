// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"online-store/gen/models"
)

// PostV1UserReader is a Reader for the PostV1User structure.
type PostV1UserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1UserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostV1UserCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostV1UserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostV1UserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostV1UserCreated creates a PostV1UserCreated with default headers values
func NewPostV1UserCreated() *PostV1UserCreated {
	return &PostV1UserCreated{}
}

/*
PostV1UserCreated describes a response with status code 201, with default header values.

success create new user
*/
type PostV1UserCreated struct {
	Payload *models.User
}

// IsSuccess returns true when this post v1 user created response has a 2xx status code
func (o *PostV1UserCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 user created response has a 3xx status code
func (o *PostV1UserCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 user created response has a 4xx status code
func (o *PostV1UserCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 user created response has a 5xx status code
func (o *PostV1UserCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 user created response a status code equal to that given
func (o *PostV1UserCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post v1 user created response
func (o *PostV1UserCreated) Code() int {
	return 201
}

func (o *PostV1UserCreated) Error() string {
	return fmt.Sprintf("[POST /v1/user][%d] postV1UserCreated  %+v", 201, o.Payload)
}

func (o *PostV1UserCreated) String() string {
	return fmt.Sprintf("[POST /v1/user][%d] postV1UserCreated  %+v", 201, o.Payload)
}

func (o *PostV1UserCreated) GetPayload() *models.User {
	return o.Payload
}

func (o *PostV1UserCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1UserUnauthorized creates a PostV1UserUnauthorized with default headers values
func NewPostV1UserUnauthorized() *PostV1UserUnauthorized {
	return &PostV1UserUnauthorized{}
}

/*
PostV1UserUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type PostV1UserUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this post v1 user unauthorized response has a 2xx status code
func (o *PostV1UserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 user unauthorized response has a 3xx status code
func (o *PostV1UserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 user unauthorized response has a 4xx status code
func (o *PostV1UserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 user unauthorized response has a 5xx status code
func (o *PostV1UserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 user unauthorized response a status code equal to that given
func (o *PostV1UserUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post v1 user unauthorized response
func (o *PostV1UserUnauthorized) Code() int {
	return 401
}

func (o *PostV1UserUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/user][%d] postV1UserUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1UserUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/user][%d] postV1UserUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1UserUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *PostV1UserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1UserDefault creates a PostV1UserDefault with default headers values
func NewPostV1UserDefault(code int) *PostV1UserDefault {
	return &PostV1UserDefault{
		_statusCode: code,
	}
}

/*
PostV1UserDefault describes a response with status code -1, with default header values.

error
*/
type PostV1UserDefault struct {
	_statusCode int

	Payload *models.BaseResponse
}

// IsSuccess returns true when this post v1 user default response has a 2xx status code
func (o *PostV1UserDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this post v1 user default response has a 3xx status code
func (o *PostV1UserDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this post v1 user default response has a 4xx status code
func (o *PostV1UserDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this post v1 user default response has a 5xx status code
func (o *PostV1UserDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this post v1 user default response a status code equal to that given
func (o *PostV1UserDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the post v1 user default response
func (o *PostV1UserDefault) Code() int {
	return o._statusCode
}

func (o *PostV1UserDefault) Error() string {
	return fmt.Sprintf("[POST /v1/user][%d] PostV1User default  %+v", o._statusCode, o.Payload)
}

func (o *PostV1UserDefault) String() string {
	return fmt.Sprintf("[POST /v1/user][%d] PostV1User default  %+v", o._statusCode, o.Payload)
}

func (o *PostV1UserDefault) GetPayload() *models.BaseResponse {
	return o.Payload
}

func (o *PostV1UserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
