// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Online Store Service API",
    "title": "online store service",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/carts": {
      "get": {
        "description": "get carts list data API",
        "tags": [
          "cart"
        ],
        "summary": "carts list data",
        "parameters": [
          {
            "$ref": "#/parameters/Keyword"
          },
          {
            "$ref": "#/parameters/Page"
          },
          {
            "$ref": "#/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "success get carts list data",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Cart"
                  }
                },
                "metadata": {
                  "$ref": "#/definitions/pagination"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/responses/Unauthorized"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      },
      "post": {
        "description": "create new cart API",
        "tags": [
          "cart"
        ],
        "summary": "create new cart",
        "parameters": [
          {
            "description": "product request body",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartRequest"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "success create new cart",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/responses/Unauthorized"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/v1/histories": {
      "post": {
        "description": "create new history API",
        "tags": [
          "history"
        ],
        "summary": "create new history",
        "parameters": [
          {
            "description": "product request body",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "success create new cart",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/responses/Unauthorized"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/v1/login": {
      "post": {
        "security": [],
        "description": "login endpoint",
        "tags": [
          "login"
        ],
        "summary": "login to service",
        "parameters": [
          {
            "description": "login request data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "login success",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/responses/Unauthorized"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/v1/products": {
      "get": {
        "description": "get product list data API",
        "tags": [
          "product"
        ],
        "summary": "products list data",
        "parameters": [
          {
            "$ref": "#/parameters/Keyword"
          },
          {
            "$ref": "#/parameters/Page"
          },
          {
            "$ref": "#/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "success get product list data",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                },
                "metadata": {
                  "$ref": "#/definitions/pagination"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/responses/Unauthorized"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      },
      "post": {
        "description": "create new product API",
        "tags": [
          "product"
        ],
        "summary": "create new product",
        "parameters": [
          {
            "description": "product request body",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "success create new product",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/responses/Unauthorized"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/v1/user": {
      "post": {
        "security": [],
        "description": "create new user",
        "tags": [
          "user"
        ],
        "summary": "create user",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "success create new user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/responses/Unauthorized"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/v1/user/{id}": {
      "get": {
        "description": "get user detail",
        "tags": [
          "user"
        ],
        "summary": "get user by id",
        "parameters": [
          {
            "$ref": "#/parameters/ModelID"
          }
        ],
        "responses": {
          "200": {
            "description": "success get user detail",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/responses/Unauthorized"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BaseResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Cart": {
      "allOf": [
        {
          "$ref": "#/definitions/ModelID"
        },
        {
          "$ref": "#/definitions/ModelLogTime"
        },
        {
          "$ref": "#/definitions/CartData"
        },
        {
          "type": "object",
          "properties": {
            "Product": {
              "$ref": "#/definitions/Product"
            },
            "ProductID": {
              "type": "number",
              "format": "uint",
              "x-go-custom-tag": "gorm:\"type:integer; not null\""
            },
            "User": {
              "$ref": "#/definitions/User"
            },
            "UserID": {
              "type": "number",
              "format": "uint",
              "x-go-custom-tag": "gorm:\"type:integer; not null\""
            }
          }
        }
      ]
    },
    "CartData": {
      "type": "object",
      "properties": {
        "Quantity": {
          "type": "number",
          "format": "int64"
        }
      }
    },
    "CartRequest": {
      "type": "object",
      "required": [
        "productID",
        "quantity"
      ],
      "properties": {
        "productID": {
          "type": "integer",
          "format": "uint"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CreateUserRequest": {
      "$ref": "#/definitions/UserData"
    },
    "DeletedAt": {
      "type": "object",
      "x-go-type": {
        "embedded": true,
        "import": {
          "package": "gorm.io/gorm"
        },
        "type": "DeletedAt"
      }
    },
    "History": {
      "allOf": [
        {
          "$ref": "#/definitions/ModelID"
        },
        {
          "$ref": "#/definitions/ModelLogTime"
        },
        {
          "$ref": "#/definitions/HistoryData"
        },
        {
          "type": "object",
          "properties": {
            "user": {
              "$ref": "#/definitions/User"
            },
            "userID": {
              "type": "integer",
              "format": "int64",
              "x-go-custom-tag": "gorm:\"type:integer\""
            }
          }
        }
      ]
    },
    "HistoryData": {
      "type": "object",
      "properties": {
        "MetaData": {
          "type": "string"
        }
      }
    },
    "HistoryRequest": {
      "type": "object",
      "required": [
        "metadata"
      ],
      "properties": {
        "metadata": {
          "type": "string"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "ModelID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint",
          "x-go-custom-tag": "gorm:\"type:int auto_increment;primaryKey\""
        }
      }
    },
    "ModelLogTime": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "integer",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:int;autoCreateTime\""
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime\"",
          "x-go-type": {
            "type": "DeletedAt"
          }
        },
        "updatedAt": {
          "type": "integer",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:int;autoUpdateTime\""
        }
      }
    },
    "Product": {
      "allOf": [
        {
          "$ref": "#/definitions/ModelID"
        },
        {
          "$ref": "#/definitions/ModelLogTime"
        },
        {
          "$ref": "#/definitions/ProductData"
        }
      ]
    },
    "ProductData": {
      "type": "object",
      "required": [
        "name",
        "price"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:varchar(255); not null\""
        },
        "price": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "gorm:\"type:float; not null\""
        }
      }
    },
    "User": {
      "allOf": [
        {
          "$ref": "#/definitions/ModelID"
        },
        {
          "$ref": "#/definitions/ModelLogTime"
        },
        {
          "$ref": "#/definitions/UserData"
        }
      ]
    },
    "UserData": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:varchar(225) not null\""
        },
        "role": {
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:varchar(225) not null\""
        },
        "username": {
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:varchar(225) not null unique\""
        }
      }
    },
    "pagination": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer"
        },
        "totalData": {
          "type": "integer"
        },
        "totalPage": {
          "type": "integer"
        }
      }
    },
    "principal": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  },
  "parameters": {
    "Keyword": {
      "type": "string",
      "description": "search keyword",
      "name": "keyword",
      "in": "query"
    },
    "Limit": {
      "type": "integer",
      "format": "int32",
      "description": "The numbers of items to return.",
      "name": "limit",
      "in": "query"
    },
    "ModelID": {
      "type": "number",
      "format": "int64",
      "name": "id",
      "in": "path",
      "required": true
    },
    "Page": {
      "type": "integer",
      "format": "int32",
      "description": "the number of page",
      "name": "page",
      "in": "query"
    }
  },
  "responses": {
    "BadRequest": {
      "description": "something wrong when send request to server",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "Created": {
      "description": "the request to the server was successful",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "ForbiddenAccess": {
      "description": "the client don` + "`" + `t have access to the resource",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "InternalServerError": {
      "description": "Internal Server Error",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "NotFound": {
      "description": "the request resource is not found",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "Success": {
      "description": "the request to the server was successful",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "Unauthorized": {
      "description": "the client must be authenticated to perform this request",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "UnprocessableEntity": {
      "description": "The request is correct but server can` + "`" + `t process the request",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "x-online-store-key",
      "in": "header"
    }
  },
  "security": [
    {
      "key": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Online Store Service API",
    "title": "online store service",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/carts": {
      "get": {
        "description": "get carts list data API",
        "tags": [
          "cart"
        ],
        "summary": "carts list data",
        "parameters": [
          {
            "type": "string",
            "description": "search keyword",
            "name": "keyword",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "the number of page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "The numbers of items to return.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success get carts list data",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Cart"
                  }
                },
                "metadata": {
                  "$ref": "#/definitions/pagination"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "the client must be authenticated to perform this request",
              "schema": {
                "$ref": "#/definitions/BaseResponse"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      },
      "post": {
        "description": "create new cart API",
        "tags": [
          "cart"
        ],
        "summary": "create new cart",
        "parameters": [
          {
            "description": "product request body",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartRequest"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "success create new cart",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "the client must be authenticated to perform this request",
              "schema": {
                "$ref": "#/definitions/BaseResponse"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/v1/histories": {
      "post": {
        "description": "create new history API",
        "tags": [
          "history"
        ],
        "summary": "create new history",
        "parameters": [
          {
            "description": "product request body",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoryRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "success create new cart",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "the client must be authenticated to perform this request",
              "schema": {
                "$ref": "#/definitions/BaseResponse"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/v1/login": {
      "post": {
        "security": [],
        "description": "login endpoint",
        "tags": [
          "login"
        ],
        "summary": "login to service",
        "parameters": [
          {
            "description": "login request data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "login success",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "the client must be authenticated to perform this request",
              "schema": {
                "$ref": "#/definitions/BaseResponse"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/v1/products": {
      "get": {
        "description": "get product list data API",
        "tags": [
          "product"
        ],
        "summary": "products list data",
        "parameters": [
          {
            "type": "string",
            "description": "search keyword",
            "name": "keyword",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "the number of page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "The numbers of items to return.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success get product list data",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                },
                "metadata": {
                  "$ref": "#/definitions/pagination"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "the client must be authenticated to perform this request",
              "schema": {
                "$ref": "#/definitions/BaseResponse"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      },
      "post": {
        "description": "create new product API",
        "tags": [
          "product"
        ],
        "summary": "create new product",
        "parameters": [
          {
            "description": "product request body",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "success create new product",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "the client must be authenticated to perform this request",
              "schema": {
                "$ref": "#/definitions/BaseResponse"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/v1/user": {
      "post": {
        "security": [],
        "description": "create new user",
        "tags": [
          "user"
        ],
        "summary": "create user",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "success create new user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "the client must be authenticated to perform this request",
              "schema": {
                "$ref": "#/definitions/BaseResponse"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/v1/user/{id}": {
      "get": {
        "description": "get user detail",
        "tags": [
          "user"
        ],
        "summary": "get user by id",
        "parameters": [
          {
            "type": "number",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success get user detail",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "the client must be authenticated to perform this request",
              "schema": {
                "$ref": "#/definitions/BaseResponse"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BaseResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Cart": {
      "allOf": [
        {
          "$ref": "#/definitions/ModelID"
        },
        {
          "$ref": "#/definitions/ModelLogTime"
        },
        {
          "$ref": "#/definitions/CartData"
        },
        {
          "type": "object",
          "properties": {
            "Product": {
              "$ref": "#/definitions/Product"
            },
            "ProductID": {
              "type": "number",
              "format": "uint",
              "x-go-custom-tag": "gorm:\"type:integer; not null\""
            },
            "User": {
              "$ref": "#/definitions/User"
            },
            "UserID": {
              "type": "number",
              "format": "uint",
              "x-go-custom-tag": "gorm:\"type:integer; not null\""
            }
          }
        }
      ]
    },
    "CartData": {
      "type": "object",
      "properties": {
        "Quantity": {
          "type": "number",
          "format": "int64"
        }
      }
    },
    "CartRequest": {
      "type": "object",
      "required": [
        "productID",
        "quantity"
      ],
      "properties": {
        "productID": {
          "type": "integer",
          "format": "uint"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CreateUserRequest": {
      "$ref": "#/definitions/UserData"
    },
    "DeletedAt": {
      "type": "object",
      "x-go-type": {
        "embedded": true,
        "import": {
          "package": "gorm.io/gorm"
        },
        "type": "DeletedAt"
      }
    },
    "History": {
      "allOf": [
        {
          "$ref": "#/definitions/ModelID"
        },
        {
          "$ref": "#/definitions/ModelLogTime"
        },
        {
          "$ref": "#/definitions/HistoryData"
        },
        {
          "type": "object",
          "properties": {
            "user": {
              "$ref": "#/definitions/User"
            },
            "userID": {
              "type": "integer",
              "format": "int64",
              "x-go-custom-tag": "gorm:\"type:integer\""
            }
          }
        }
      ]
    },
    "HistoryData": {
      "type": "object",
      "properties": {
        "MetaData": {
          "type": "string"
        }
      }
    },
    "HistoryRequest": {
      "type": "object",
      "required": [
        "metadata"
      ],
      "properties": {
        "metadata": {
          "type": "string"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "ModelID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint",
          "x-go-custom-tag": "gorm:\"type:int auto_increment;primaryKey\""
        }
      }
    },
    "ModelLogTime": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "integer",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:int;autoCreateTime\""
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:datetime\"",
          "x-go-type": {
            "type": "DeletedAt"
          }
        },
        "updatedAt": {
          "type": "integer",
          "format": "date-time",
          "x-go-custom-tag": "gorm:\"type:int;autoUpdateTime\""
        }
      }
    },
    "Product": {
      "allOf": [
        {
          "$ref": "#/definitions/ModelID"
        },
        {
          "$ref": "#/definitions/ModelLogTime"
        },
        {
          "$ref": "#/definitions/ProductData"
        }
      ]
    },
    "ProductData": {
      "type": "object",
      "required": [
        "name",
        "price"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:varchar(255); not null\""
        },
        "price": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "gorm:\"type:float; not null\""
        }
      }
    },
    "User": {
      "allOf": [
        {
          "$ref": "#/definitions/ModelID"
        },
        {
          "$ref": "#/definitions/ModelLogTime"
        },
        {
          "$ref": "#/definitions/UserData"
        }
      ]
    },
    "UserData": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:varchar(225) not null\""
        },
        "role": {
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:varchar(225) not null\""
        },
        "username": {
          "type": "string",
          "x-go-custom-tag": "gorm:\"type:varchar(225) not null unique\""
        }
      }
    },
    "pagination": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer"
        },
        "totalData": {
          "type": "integer"
        },
        "totalPage": {
          "type": "integer"
        }
      }
    },
    "principal": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  },
  "parameters": {
    "Keyword": {
      "type": "string",
      "description": "search keyword",
      "name": "keyword",
      "in": "query"
    },
    "Limit": {
      "type": "integer",
      "format": "int32",
      "description": "The numbers of items to return.",
      "name": "limit",
      "in": "query"
    },
    "ModelID": {
      "type": "number",
      "format": "int64",
      "name": "id",
      "in": "path",
      "required": true
    },
    "Page": {
      "type": "integer",
      "format": "int32",
      "description": "the number of page",
      "name": "page",
      "in": "query"
    }
  },
  "responses": {
    "BadRequest": {
      "description": "something wrong when send request to server",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "Created": {
      "description": "the request to the server was successful",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "ForbiddenAccess": {
      "description": "the client don` + "`" + `t have access to the resource",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "InternalServerError": {
      "description": "Internal Server Error",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "NotFound": {
      "description": "the request resource is not found",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "Success": {
      "description": "the request to the server was successful",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "Unauthorized": {
      "description": "the client must be authenticated to perform this request",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    },
    "UnprocessableEntity": {
      "description": "The request is correct but server can` + "`" + `t process the request",
      "schema": {
        "$ref": "#/definitions/BaseResponse"
      }
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "x-online-store-key",
      "in": "header"
    }
  },
  "security": [
    {
      "key": []
    }
  ]
}`))
}
